package pkg

import java.lang.annotation.Retention
import java.lang.annotation.RetentionPolicy
import kotlin.jvm.internal.RepeatableContainer

class TestAnnotations {
   @TestAnnotations.TestAnnotation(first = "test", second = 1)
   public fun test() {
   }// 16

   @TestAnnotations.RepeatableAnnotation.Container([@TestAnnotations.RepeatableAnnotation("test"), @TestAnnotations.RepeatableAnnotation("test2")])
   public fun test2() {
   }// 21

   @Repeatable
   @Retention(RetentionPolicy.RUNTIME)
   @java.lang.annotation.Repeatable(TestAnnotations.RepeatableAnnotation.Container::class)
   annotation class RepeatableAnnotation(
      val value: java.lang.String
   ) {
      @RepeatableContainer
      @Retention(RetentionPolicy.RUNTIME)
      annotation class Container(
         val value: Array<TestAnnotations.RepeatableAnnotation>
      )
   }

   @Retention(RetentionPolicy.RUNTIME)
   annotation class TestAnnotation(
      val first: java.lang.String,
      val second: Int
   )
}

class 'pkg/TestAnnotations' {
   method 'test ()V' {
      0      9
   }

   method 'test2 ()V' {
      0      13
   }
}

Lines mapping:
16 <-> 10
21 <-> 14
